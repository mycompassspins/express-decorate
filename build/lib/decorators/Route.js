"use strict";
const ValidatePaths_1 = require('./ValidatePaths');
function Route(method, ...args) {
    if (typeof method !== 'string')
        throw new Error('The first argument must be an HTTP method');
    const [path, middleware] = ValidatePaths_1.Destruct(args);
    return (target, name, descriptor) => {
        target[`${ValidatePaths_1.ROUTE_PREFIX}${name}`] = { method: method, path: path, middleware: middleware };
    };
}
exports.Route = Route;
function WsRoute(...args) {
    const [path, middleware] = ValidatePaths_1.Destruct(args);
    return (target, name, descriptor) => {
        target[`${ValidatePaths_1.ROUTE_PREFIX}${name}`] = { path: path, middleware: middleware };
    };
}
exports.WsRoute = WsRoute;
const GET = Route.bind(null, 'get');
exports.GET = GET;
const POST = Route.bind(null, 'post');
exports.POST = POST;
const PUT = Route.bind(null, 'put');
exports.PUT = PUT;
const DELETE = Route.bind(null, 'delete');
exports.DELETE = DELETE;
const ALL = Route.bind(null, 'all');
exports.ALL = ALL;
const WS = WsRoute.bind(null);
exports.WS = WS;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kZWNvcmF0b3JzL1JvdXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFJQSxnQ0FBdUMsaUJBVXZDLENBQUMsQ0FWdUQ7QUFVeEQsZUFBZSxNQUFhLEVBQUUsR0FBRyxJQUFVO0lBRTFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sTUFBTSxLQUFLLFFBQVEsQ0FBQztRQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7SUFFOUQsTUFBTSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsR0FBRyx3QkFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRTFDLE1BQU0sQ0FBQyxDQUFDLE1BQVUsRUFBRSxJQUFXLEVBQUUsVUFBYztRQUU5QyxNQUFNLENBQUMsR0FBRyw0QkFBWSxHQUFHLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxRQUFBLE1BQU0sRUFBRSxNQUFBLElBQUksRUFBRSxZQUFBLFVBQVUsRUFBRSxDQUFDO0lBQ2pFLENBQUMsQ0FBQTtBQUNGLENBQUM7QUFvQlEsYUFBSyxTQXBCYjtBQUVELGlCQUFpQixHQUFHLElBQVU7SUFFN0IsTUFBTSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsR0FBRyx3QkFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRTFDLE1BQU0sQ0FBQyxDQUFDLE1BQVUsRUFBRSxJQUFXLEVBQUUsVUFBYztRQUU5QyxNQUFNLENBQUMsR0FBRyw0QkFBWSxHQUFHLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxNQUFBLElBQUksRUFBRSxZQUFBLFVBQVUsRUFBRSxDQUFDO0lBQ3pELENBQUMsQ0FBQTtBQUNGLENBQUM7QUFVZSxlQUFPLFdBVnRCO0FBR0QsTUFBTSxHQUFHLEdBQVksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDO0FBT25CLFdBQUcsT0FQaUI7QUFDN0MsTUFBTSxJQUFJLEdBQVksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDO0FBTWhCLFlBQUksUUFOYTtBQUMvQyxNQUFNLEdBQUcsR0FBWSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUM7QUFLUixXQUFHLE9BTE07QUFDN0MsTUFBTSxNQUFNLEdBQVksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDO0FBSVQsY0FBTSxVQUpJO0FBQ25ELE1BQU0sR0FBRyxHQUFZLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQztBQUdLLFdBQUcsT0FIUDtBQUM3QyxNQUFNLEVBQUUsR0FBWSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztBQUVnQixVQUFFLE1BRmpCO0FBRW1CIiwiZmlsZSI6ImxpYi9kZWNvcmF0b3JzL1JvdXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IEp1c3RpbiBvbiA4LzIxLzE2LlxuICovXG5cbmltcG9ydCB7IERlc3RydWN0LCBST1VURV9QUkVGSVggfSBmcm9tICcuL1ZhbGlkYXRlUGF0aHMnXG5cbi8qKlxuICogQHVzYWdlIEBSb3V0ZShtZXRob2QsIHBhdGg6IG9wdGlvbmFsLCAuLi5taWRkbGV3YXJlOiBvcHRpb25hbClcbiAqIEBwYXJhbSBtZXRob2RcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBhcmdzXG4gKiBAcmV0dXJucyB7KHRhcmdldDphbnksIG5hbWU6YW55LCBkZXNjcmlwdG9yOmFueSk9PnZvaWR9XG4gKiBAY29uc3RydWN0b3JcbiAqL1xuZnVuY3Rpb24gUm91dGUobWV0aG9kOnN0cmluZywgLi4uYXJnczphbnlbXSlcbntcblx0aWYgKHR5cGVvZiBtZXRob2QgIT09ICdzdHJpbmcnKVxuXHRcdHRocm93IG5ldyBFcnJvcignVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYW4gSFRUUCBtZXRob2QnKTtcblxuXHRjb25zdCBbcGF0aCwgbWlkZGxld2FyZV0gPSBEZXN0cnVjdChhcmdzKTtcblxuXHRyZXR1cm4gKHRhcmdldDphbnksIG5hbWU6c3RyaW5nLCBkZXNjcmlwdG9yOmFueSk6dm9pZCA9PlxuXHR7XG5cdFx0dGFyZ2V0W2Ake1JPVVRFX1BSRUZJWH0ke25hbWV9YF0gPSB7IG1ldGhvZCwgcGF0aCwgbWlkZGxld2FyZSB9O1xuXHR9XG59XG5cbmZ1bmN0aW9uIFdzUm91dGUoLi4uYXJnczphbnlbXSlcbntcblx0Y29uc3QgW3BhdGgsIG1pZGRsZXdhcmVdID0gRGVzdHJ1Y3QoYXJncyk7XG5cblx0cmV0dXJuICh0YXJnZXQ6YW55LCBuYW1lOnN0cmluZywgZGVzY3JpcHRvcjphbnkpOnZvaWQgPT5cblx0e1xuXHRcdHRhcmdldFtgJHtST1VURV9QUkVGSVh9JHtuYW1lfWBdID0geyBwYXRoLCBtaWRkbGV3YXJlIH07XG5cdH1cbn1cblxuLy8gSW5kaXZpZHVhbCB3cmFwcGVycyBmb3IgQFJvdXRlKClcbmNvbnN0IEdFVDpGdW5jdGlvbiA9IFJvdXRlLmJpbmQobnVsbCwgJ2dldCcpO1xuY29uc3QgUE9TVDpGdW5jdGlvbiA9IFJvdXRlLmJpbmQobnVsbCwgJ3Bvc3QnKTtcbmNvbnN0IFBVVDpGdW5jdGlvbiA9IFJvdXRlLmJpbmQobnVsbCwgJ3B1dCcpO1xuY29uc3QgREVMRVRFOkZ1bmN0aW9uID0gUm91dGUuYmluZChudWxsLCAnZGVsZXRlJyk7XG5jb25zdCBBTEw6RnVuY3Rpb24gPSBSb3V0ZS5iaW5kKG51bGwsICdhbGwnKTtcbmNvbnN0IFdTOkZ1bmN0aW9uID0gV3NSb3V0ZS5iaW5kKG51bGwpO1xuXG5leHBvcnQgeyBSb3V0ZSwgV3NSb3V0ZSwgR0VULCBQT1NULCBQVVQsIERFTEVURSwgQUxMLCBXUyB9XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
